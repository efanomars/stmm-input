/*
 * Copyright Â© 2017-2020  Stefano Marsili, <stemars@gmx.ch>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, see <http://www.gnu.org/licenses/>
 */
/*
 * File:   stmm-input-dl-config.cc
 */

#include "stmm-input-dl-config.h"

#include "dlutil.h"

#include <cassert>
#include <memory>

#include <stdlib.h>

namespace stmi
{

namespace libconfig
{

namespace dl
{

const char* getVersion() noexcept
{
	static const char* const s_p0LibVersion = "@STMMI_PKG_VERSION@";
	return s_p0LibVersion;
}

std::vector<std::string> getDataDirPaths() noexcept
{
	static const char* const s_p0DataDir0 = "@STMMI_PKG_DATA_DIR0@";
	static const char* const s_p0DataDir1 = "@STMMI_PKG_DATA_DIR1@";
	#ifdef STMM_SNAP_PACKAGING
	const std::string sPrefix = DlUtil::getEnvString("SNAP");
	#else
	const std::string sPrefix;
	#endif //STMM_SNAP_PACKAGING
	std::vector<std::string> aDataDirs;
	std::string sDataDir{s_p0DataDir0};
	if (! sDataDir.empty()) {
		aDataDirs.push_back(sPrefix + sDataDir);
	}
	sDataDir = std::string{s_p0DataDir1};
	if (! sDataDir.empty()) {
		aDataDirs.push_back(sPrefix + sDataDir);
	}

	assert(aDataDirs.size() <= 2);
	if ((aDataDirs.size() == 2) && (aDataDirs[0] == aDataDirs[1])) {
		aDataDirs.pop_back();
	}
	return aDataDirs;
}

std::string getUserDataDirPath() noexcept
{
	static const char* const s_p0UserDataDir = "@STMMI_PKG_USER_DATA_DIR@";
	const std::string sUserDataDir{s_p0UserDataDir};
	if (sUserDataDir.empty()) {
		return sUserDataDir; //-------------------------------------------------
	}
	#ifdef STMM_SNAP_PACKAGING
	// ex. /home/myusername/snap/mysnapname/x1
	const std::string sHome = DlUtil::getEnvString("SNAP_USER_DATA");
	#else
	// ex. /home/myusername
	const std::string sHome = DlUtil::getEnvString("HOME");
	#endif //STMM_SNAP_PACKAGING
	if (sHome.empty()) {
		return sHome; //--------------------------------------------------------
	}
	return sHome + "/" + sUserDataDir;
}


} // namespace dl

} // namespace libconfig

} // namespace stmi
